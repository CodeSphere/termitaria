<?xml version="1.0" encoding="UTF-8"?>
<!--
  This file is part of Termitaria, a project management tool 
     Copyright (C) 2008-2013 CodeSphere S.R.L., www.codesphere.ro
      
     Termitaria is free software; you can redistribute it and/or 
     modify it under the terms of the GNU Affero General Public License 
     as published by the Free Software Foundation; either version 3 of 
     the License, or (at your option) any later version.
     
     This program is distributed in the hope that it will be useful, 
     but WITHOUT ANY WARRANTY; without even the implied warranty of 
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
     GNU Affero General Public License for more details.
     
     You should have received a copy of the GNU Affero General Public License 
     along with Termitaria. If not, see  <http://www.gnu.org/licenses/> .
-->
<b:beans xmlns="http://www.springframework.org/schema/security"
	   xmlns:b="http://www.springframework.org/schema/beans" 
	   xmlns:util="http://www.springframework.org/schema/util" xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
	   		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
	   		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
	   		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd 
	   		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
      
    <http entry-point-ref="basicAuthenticationEntryPoint" 
			access-denied-page="/accessDenied.jsp" 
			access-decision-manager-ref="domainAccessDecisionManager"
			realm="TS">
	       	 
	    <!-- WE ALLOW ONLY ONE SESSION PER USER -->
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/" />
		</session-management>
	       	 
	    <!--  TS MAIN ENTRY POINT -->    
	    <intercept-url pattern="/SignOn.htm*" access="TS_Basic" />
       	<intercept-url pattern="/Main.htm*" access="TS_Basic"/> 
       	<intercept-url pattern="/Home.htm*" access="TS_Basic"/> 
       	
       	<!-- CURRENCY -->
       	<intercept-url pattern="/CurrencySearch.htm*" access="TS_CurrencySearch, TS_CurrencyDelete"/>     
       	<intercept-url pattern="/CurrencyForm.htm*" access="TS_CurrencyAdd, TS_CurrencyUpdate"/>
      
       	
		<!-- OTHERS -->
		       	
       	<!-- Security for the rest of links -->
        <intercept-url pattern="/*.css"/>
       	<intercept-url pattern="/*.js"  />
       	<intercept-url pattern="/*.jpg"  />
       	<intercept-url pattern="/reportservlet*"  />
		<intercept-url pattern="/servlet/**" access="TS_Basic" />
       	
       	<remember-me key="TSKey"/>
		
		<logout invalidate-session="true"/>
       	
    </http>      
                        
    <authentication-manager alias="tsAuthenticationManager"/>
        
     <b:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<b:constructor-arg>
			<util:list>
				<security:filter-chain pattern="/index.jsp"
					filters="basicProcessingFilter" />
			</util:list>
		</b:constructor-arg>
	</b:bean>

  	<b:bean id="basicProcessingFilter" class="ro.cs.ts.web.security.TokenBasedAuthenticationFilter">
		<b:property name="authenticationManager" ref="tsAuthenticationManager"/>
		<b:property name="authenticationEntryPoint" ref ="basicAuthenticationEntryPoint"/>
<!-- 		<custom-filter position="AUTHENTICATION_PROCESSING_FILTER"/>  -->
	</b:bean>
	
	<b:bean id="basicAuthenticationEntryPoint" class="ro.cs.ts.web.security.TokenBasedAuthenticationEntryPoint"/>
	
	<b:bean id="userDetailsService" class="ro.cs.ts.web.security.TSUserDetailsService"/>
	
	<!-- An access decision voter that reads permission configuration settings -->
	<b:bean id="roleVoter" class="ro.cs.ts.web.security.TSRoleVoter">
		<b:property name="rolePrefix" value=""/>
	</b:bean>
	
	<!-- An access decision voter that reads IS_* configuration settings -->
	<b:bean id="isAuthenticatedAnonimouslyVoter" class="ro.cs.ts.web.security.TSRoleVoter">
		<b:property name="rolePrefix" value="IS_"/>
	</b:bean>
	 
	 <!-- An access decision manager used by the business objects -->
  	<b:bean id="domainAccessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
    	<b:property name="allowIfAllAbstainDecisions" value="false"/>
    	<b:property name="decisionVoters">
	      <b:list>
	        <b:ref local="roleVoter"/>
	       	<!-- <b:ref local="isAuthenticatedAnonimouslyVoter"/> -->
	      </b:list>
    	</b:property>
  	</b:bean>  	
  	
  	<!-- =========================== SOAP MESSAGE CERTIFICATE VALIDATION AND AUTHENTICATION ==================================== -->
  	
  	<!-- Security interceptor used to validate and authenticate the certificates attached to the Web Service requests -->
  	<b:bean id="tsWsSecurityInterceptor" class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
    	<b:property name="validationActions" value="Signature"/>
    	<b:property name="securementUsername" value="trustedCA"/>
    	<b:property name="securementPassword" value="password"/>
    	<b:property name="validationSignatureCrypto">
     		<b:bean class="org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean">
        		<b:property name="keyStorePassword" value="password"/>
        		<b:property name="keyStoreLocation" value="/WEB-INF/truststore.jks"/>
        		<b:property name="keyStoreType" value="jks" />
      			<b:property name="defaultX509Alias" value="trustedCA"/>
      		</b:bean>
   		</b:property>
   		<b:property name="timestampStrict" value="true"/>
	</b:bean>	
  		
	<!-- ==================== SPRING WS SECURITY CERTIFICATE MESSAGE SIGNING ============ -->
	 
	<b:bean id="wsClientsSecurityInterceptor" class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
    	<b:property name="securementActions" value="Signature"/>
    	<b:property name="securementSignatureKeyIdentifier" value="DirectReference"/>  
    	<b:property name="securementUsername" value="wsclient"/>
    	<b:property name="securementPassword" value="password"/>
    	<b:property name="securementSignatureCrypto">
      		<b:bean class="org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean">
        		<b:property name="keyStorePassword" value="password"/>
        		<b:property name="keyStoreLocation" value="/WEB-INF/keystore.jks"/>
      		</b:bean>
    	</b:property>
	</b:bean>

    <!-- ==================== END OF SPRING WS SECURITY CERTIFICATE MESSAGE SIGNING ============ -->
  	  	  	  										  
</b:beans>
